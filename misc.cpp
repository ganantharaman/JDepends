/** #define  CASE_CODE(x)\
	case x: LOG_WRITE("  %s", #x ); break;

static void LdrCodeHandler( JVM_BYTE OpCode )
{
 DECLARE_LOG_DATA("c:\\jvm\\out\\class.log")
 switch ( OpCode ) {
	CASE_CODE( nop )
	CASE_CODE( aconst_null )
	CASE_CODE( iconst_m1 )
	CASE_CODE( iconst_0 )
	CASE_CODE( iconst_1 )
	CASE_CODE( iconst_2 )
	CASE_CODE( iconst_3 )
	CASE_CODE( iconst_4 )
	CASE_CODE( iconst_5 )
	CASE_CODE( lconst_0 )
	CASE_CODE( lconst_1 )
	CASE_CODE( fconst_0 )
	CASE_CODE( fconst_1 )
	CASE_CODE( fconst_2 )
	CASE_CODE( dconst_0 )
	CASE_CODE( dconst_1 )
	CASE_CODE( bipush )
	CASE_CODE( sipush )
	CASE_CODE( ldc )
	CASE_CODE( ldc_w )
	CASE_CODE( ldc2_w )
	CASE_CODE( iload )
	CASE_CODE( lload )
	CASE_CODE( fload )
	CASE_CODE( dload )
	CASE_CODE( aload )
	CASE_CODE( iload_0 )
	CASE_CODE( iload_1 )
	CASE_CODE( iload_2 )
	CASE_CODE( iload_3 )
	CASE_CODE( lload_0 )
	CASE_CODE( lload_1 )
	CASE_CODE( lload_2 )
	CASE_CODE( lload_3 )
	CASE_CODE( fload_0 )
	CASE_CODE( fload_1 )
	CASE_CODE( fload_2 )
	CASE_CODE( fload_3 )
	CASE_CODE( dload_0 )
	CASE_CODE( dload_1 )
	CASE_CODE( dload_2 )
	CASE_CODE( dload_3 )
	CASE_CODE( aload_0 )
	CASE_CODE( aload_1 )
	CASE_CODE( aload_2 )
	CASE_CODE( aload_3 )
	CASE_CODE( iaload )
	CASE_CODE( laload )
	CASE_CODE( faload )
	CASE_CODE( daload )
	CASE_CODE( aaload )
	CASE_CODE( baload )
	CASE_CODE( caload )
	CASE_CODE( saload )
	CASE_CODE( istore )
	CASE_CODE( lstore )
	CASE_CODE( fstore )
	CASE_CODE( dstore )
	CASE_CODE( astore )
	CASE_CODE( istore_0 )
	CASE_CODE( istore_1 )
	CASE_CODE( istore_2 )
	CASE_CODE( istore_3 )
	CASE_CODE( lstore_0 )
	CASE_CODE( lstore_1 )
	CASE_CODE( lstore_2 )
	CASE_CODE( lstore_3 )
	CASE_CODE( fstore_0 )
	CASE_CODE( fstore_1 )
	CASE_CODE( fstore_2 )
	CASE_CODE( fstore_3 )
	CASE_CODE( dstore_0 )
	CASE_CODE( dstore_1 )
	CASE_CODE( dstore_2 )
	CASE_CODE( dstore_3 )
	CASE_CODE( astore_0 )
	CASE_CODE( astore_1 )
	CASE_CODE( astore_2 )
	CASE_CODE( astore_3 )
	CASE_CODE( iastore )
	CASE_CODE( lastore )
	CASE_CODE( fastore )
	CASE_CODE( dastore )
	CASE_CODE( aastore )
	CASE_CODE( bastore )
	CASE_CODE( castore )
	CASE_CODE( sastore )
	CASE_CODE( pop )
	CASE_CODE( pop2 )
	CASE_CODE( dup )
	CASE_CODE( dup_x1 )
	CASE_CODE( dup_x2 )
	CASE_CODE( dup2 )
	CASE_CODE( dup2_x1 )
	CASE_CODE( dup2_x2 )
	CASE_CODE( swap )
	CASE_CODE( iadd )
	CASE_CODE( ladd )
	CASE_CODE( fadd )
	CASE_CODE( dadd )
	CASE_CODE( isub )
	CASE_CODE( lsub )
	CASE_CODE( fsub )
	CASE_CODE( dsub )
	CASE_CODE( imul )  /** TODO from here 
	CASE_CODE( lmul )
	CASE_CODE( fmul )
	CASE_CODE( dmul )
	CASE_CODE( idiv )
	CASE_CODE( Ldiv )
	CASE_CODE( fdiv )
	CASE_CODE( ddiv )
	CASE_CODE( irem )
	CASE_CODE( lrem )
	CASE_CODE( frem )
	CASE_CODE( drem )
	CASE_CODE( ineg )
	CASE_CODE( lneg )
	CASE_CODE( fneg )
	CASE_CODE( dneg )
	CASE_CODE( ishl )
	CASE_CODE( lshl )
	CASE_CODE( ishr )
	CASE_CODE( lshr )
	CASE_CODE( iushr )
	CASE_CODE( lushr )
	CASE_CODE( iand )
	CASE_CODE( land )
	CASE_CODE( ior )
	CASE_CODE( lor )
	CASE_CODE( ixor )
	CASE_CODE( lxor )
	CASE_CODE( iinc )
	CASE_CODE( i2l )
	CASE_CODE( i2f )
	CASE_CODE( i2d )
	CASE_CODE( l2i )
	CASE_CODE( l2f )
	CASE_CODE( l2d )
	CASE_CODE( f2i )
	CASE_CODE( f2l )
	CASE_CODE( f2d )
	CASE_CODE( d2i )
	CASE_CODE( d2l )
	CASE_CODE( d2f )
	CASE_CODE( i2b )
	CASE_CODE( i2c )
	CASE_CODE( i2s )
	CASE_CODE( lcmp )
	CASE_CODE( fcmpl )
	CASE_CODE( fcmpg )
	CASE_CODE( dcmpl )
	CASE_CODE( dcmpg )
	CASE_CODE( ifeq )
	CASE_CODE( ifne )
	CASE_CODE( iflt )
	CASE_CODE( ifge )
	CASE_CODE( ifgt )
	CASE_CODE( ifle )
	CASE_CODE( if_icmpeq )
	CASE_CODE( if_icmpne )
	CASE_CODE( if_icmplt )
	CASE_CODE( if_icmpge )
	CASE_CODE( if_icmpgt )
	CASE_CODE( if_icmple )
	CASE_CODE( if_acmpeq )
	CASE_CODE( if_acmpne )
	CASE_CODE( Goto )
	CASE_CODE( jsr )
	CASE_CODE( ret )
	CASE_CODE( tableswitch )
	CASE_CODE( lookupswitch )
	CASE_CODE( ireturn )
	CASE_CODE( lreturn )
	CASE_CODE( freturn )
	CASE_CODE( dreturn )
	CASE_CODE( areturn )
	CASE_CODE( Return )
	CASE_CODE( getstatic )
	CASE_CODE( putstatic )
	CASE_CODE( getfield )
	CASE_CODE( putfield )
	CASE_CODE( invokevirtual )
	CASE_CODE( invokespecial )
    CASE_CODE( invokestatic )
	CASE_CODE( invokeinterface )
	CASE_CODE( DUMMY )
	CASE_CODE( new )
	CASE_CODE( newarray )
	CASE_CODE( anewarray )
	CASE_CODE( arraylength )
	CASE_CODE( athrow )
	CASE_CODE( checkcast )
	CASE_CODE( instanceof )
	CASE_CODE( moniterenter )
	CASE_CODE( moniterexit )
	CASE_CODE( wide )
    CASE_CODE( multianewarray )
	CASE_CODE( ifnull )
	CASE_CODE( ifnonnull )
	CASE_CODE( goto_w )
	CASE_CODE( jsr_w )
 };
};
**/